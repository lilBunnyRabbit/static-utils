/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestingImport } from './routes/testing'
import { Route as ToolsImageSplitIndexImport } from './routes/tools/image-split/index'
import { Route as ToolsImageCropIndexImport } from './routes/tools/image-crop/index'
import { Route as ToolsImageConcatIndexImport } from './routes/tools/image-concat/index'
import { Route as SysTaskManagerIndexImport } from './routes/sys/task-manager/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TestingRoute = TestingImport.update({
  path: '/testing',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ToolsImageSplitIndexRoute = ToolsImageSplitIndexImport.update({
  path: '/tools/image-split/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/tools/image-split/index.lazy').then((d) => d.Route),
)

const ToolsImageCropIndexRoute = ToolsImageCropIndexImport.update({
  path: '/tools/image-crop/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/tools/image-crop/index.lazy').then((d) => d.Route),
)

const ToolsImageConcatIndexRoute = ToolsImageConcatIndexImport.update({
  path: '/tools/image-concat/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/tools/image-concat/index.lazy').then((d) => d.Route),
)

const SysTaskManagerIndexRoute = SysTaskManagerIndexImport.update({
  path: '/sys/task-manager/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/sys/task-manager/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/testing': {
      id: '/testing'
      path: '/testing'
      fullPath: '/testing'
      preLoaderRoute: typeof TestingImport
      parentRoute: typeof rootRoute
    }
    '/sys/task-manager/': {
      id: '/sys/task-manager/'
      path: '/sys/task-manager'
      fullPath: '/sys/task-manager'
      preLoaderRoute: typeof SysTaskManagerIndexImport
      parentRoute: typeof rootRoute
    }
    '/tools/image-concat/': {
      id: '/tools/image-concat/'
      path: '/tools/image-concat'
      fullPath: '/tools/image-concat'
      preLoaderRoute: typeof ToolsImageConcatIndexImport
      parentRoute: typeof rootRoute
    }
    '/tools/image-crop/': {
      id: '/tools/image-crop/'
      path: '/tools/image-crop'
      fullPath: '/tools/image-crop'
      preLoaderRoute: typeof ToolsImageCropIndexImport
      parentRoute: typeof rootRoute
    }
    '/tools/image-split/': {
      id: '/tools/image-split/'
      path: '/tools/image-split'
      fullPath: '/tools/image-split'
      preLoaderRoute: typeof ToolsImageSplitIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/testing': typeof TestingRoute
  '/sys/task-manager': typeof SysTaskManagerIndexRoute
  '/tools/image-concat': typeof ToolsImageConcatIndexRoute
  '/tools/image-crop': typeof ToolsImageCropIndexRoute
  '/tools/image-split': typeof ToolsImageSplitIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/testing': typeof TestingRoute
  '/sys/task-manager': typeof SysTaskManagerIndexRoute
  '/tools/image-concat': typeof ToolsImageConcatIndexRoute
  '/tools/image-crop': typeof ToolsImageCropIndexRoute
  '/tools/image-split': typeof ToolsImageSplitIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/testing': typeof TestingRoute
  '/sys/task-manager/': typeof SysTaskManagerIndexRoute
  '/tools/image-concat/': typeof ToolsImageConcatIndexRoute
  '/tools/image-crop/': typeof ToolsImageCropIndexRoute
  '/tools/image-split/': typeof ToolsImageSplitIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/testing'
    | '/sys/task-manager'
    | '/tools/image-concat'
    | '/tools/image-crop'
    | '/tools/image-split'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/testing'
    | '/sys/task-manager'
    | '/tools/image-concat'
    | '/tools/image-crop'
    | '/tools/image-split'
  id:
    | '__root__'
    | '/'
    | '/testing'
    | '/sys/task-manager/'
    | '/tools/image-concat/'
    | '/tools/image-crop/'
    | '/tools/image-split/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  TestingRoute: typeof TestingRoute
  SysTaskManagerIndexRoute: typeof SysTaskManagerIndexRoute
  ToolsImageConcatIndexRoute: typeof ToolsImageConcatIndexRoute
  ToolsImageCropIndexRoute: typeof ToolsImageCropIndexRoute
  ToolsImageSplitIndexRoute: typeof ToolsImageSplitIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  TestingRoute: TestingRoute,
  SysTaskManagerIndexRoute: SysTaskManagerIndexRoute,
  ToolsImageConcatIndexRoute: ToolsImageConcatIndexRoute,
  ToolsImageCropIndexRoute: ToolsImageCropIndexRoute,
  ToolsImageSplitIndexRoute: ToolsImageSplitIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/testing",
        "/sys/task-manager/",
        "/tools/image-concat/",
        "/tools/image-crop/",
        "/tools/image-split/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/testing": {
      "filePath": "testing.tsx"
    },
    "/sys/task-manager/": {
      "filePath": "sys/task-manager/index.tsx"
    },
    "/tools/image-concat/": {
      "filePath": "tools/image-concat/index.tsx"
    },
    "/tools/image-crop/": {
      "filePath": "tools/image-crop/index.tsx"
    },
    "/tools/image-split/": {
      "filePath": "tools/image-split/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
